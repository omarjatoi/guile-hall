variables:
  CONFIG_URL: "https://gitlab.com/a-sassmannshausen/guile-config"
  CONFIG_VERSION: "0.5.1"
  LPATH: "$CI_PROJECT_DIR/share/guile/site"
  CPATH: "$CI_PROJECT_DIR/lib/guile"

default:
  image: debian:stable
  before_script:
    - apt-get -y update
    - apt-get install -y guile-3.0 guile-3.0-dev make-guile texinfo curl tree autoconf automake gettext pkgconf autopoint
    - export GUILE_LOAD_PATH=${LPATH}/`guile -c "(display (effective-version))"`:${GUILE_LOAD_PATH}
    - export GUILE_LOAD_COMPILED_PATH=${CPATH}/`guile -c "(display (effective-version))"`/site-ccache:${GUILE_LOAD_COMPILED_PATH}
    - export PATH=${CI_PROJECT_DIR}/bin:${PATH}
    - guile -c "(use-modules (config))" || echo "Not Loaded"
    - echo $GUILE_LOAD_PATH
    - echo $GUILE_LOAD_COMPILED_PATH
    - IFS=':' read -r -a glparray <<< $GUILE_LOAD_PATH
    - for i in ${glparray}; do tree ${i}; done
    - IFS=':' read -r -a glcparray <<< $GUILE_LOAD_COMPILED_PATH
    - for i in ${glcparray}; do tree ${i}; done
    - env

stages:          # List of stages for jobs, and their order of execution
  - build
  - test

deps:
  stage: .pre
  script:
    - curl -O "$CONFIG_URL/-/archive/$CONFIG_VERSION/guile-config-$CONFIG_VERSION.tar.gz"
    - tar xzf guile-config-$CONFIG_VERSION.tar.gz
    - cd guile-config-$CONFIG_VERSION
    - autoreconf -vif && ./configure --prefix=${CI_PROJECT_DIR} --exec-prefix=${CI_PROJECT_DIR} && make && make install && ls -l
  cache:
    key:
      files:
        - hall.scm
    paths:
      - ./

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - guile -c "(use-modules (config))" || echo "Not Loaded"
    - echo "Compiling the code..."
    - autoreconf -vif && ./configure --prefix=${CI_PROJECT_DIR} --exec-prefix=${CI_PROJECT_DIR} && make
  cache:
    key:
      files:
        - hall.scm
    paths:
      - ./

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - guile -c "(use-modules (config))" || echo "Not Loaded"
    - echo "Running check."
    - make check
  cache:
    key:
      files:
        - hall.scm
    paths:
      - ./

dist-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - guile -c "(use-modules (config))" || echo "Not Loaded"
    - echo "Running distcheck"
    - make distcheck
  cache:
    key:
      files:
        - hall.scm
    paths:
      - ./

app-test-job:
  stage: test
  script:
    - guile -c "(use-modules (config))" || echo "Not Loaded"
    - echo "Testing application..."
    - make install
    - cd /tmp &&
      hall --version &&
      hall init htest -x &&
      cd htest &&
      hall scan -x &&
      hall build -x
  cache:
    key:
      files:
        - hall.scm
    paths:
      - ./
